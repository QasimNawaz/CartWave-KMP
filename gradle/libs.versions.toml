[versions]
agp = "8.2.1"
kotlin = "1.9.21"
jetbrains-compose = "1.5.11"

android-compileSdk = "34"
android-minSdk = "24"
android-targetSdk = "34"

androidx-activityCompose = "1.8.2"
androidx-appcompat = "1.6.1"
compose-uitooling = "1.5.4"
kotlinx-coroutines = "1.7.3"
kotlinx-serialization = "1.6.2"
accompanist-permissions = "0.32.0"
androidxCoreSplashscreen = "1.0.1"
material = "1.11.0"
windowsizeMultiplatform = "0.3.2"

multiplatform-settings = "1.1.1"
decompose = "2.2.2"
extensionsComposeJetbrains = "2.1.4-compose-experimental"
koin = "3.5.3"
koin-compose = "1.1.2"
ktor = "2.3.7"
kamel-image = "0.9.1"
napier = "2.7.1"

[libraries]
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose-uitooling" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
material = { module = "com.google.android.material:material", version.ref = "material" }
windowsize-multiplatform = { module = "dev.chrisbanes.material3:material3-window-size-class-multiplatform", version.ref = "windowsizeMultiplatform" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist-permissions" }
# Splash
androidx-core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "androidxCoreSplashscreen" }

# multiplatform
multiplatform-settings = { module = "com.russhwolf:multiplatform-settings-no-arg", version.ref = "multiplatform-settings" }
multiplatform-settings-serialization = { module = "com.russhwolf:multiplatform-settings-serialization", version.ref = "multiplatform-settings" }
multiplatform-settings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatform-settings" }
# Decompose
decompose = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-jetbrains = { module = "com.arkivanov.decompose:extensions-compose-jetbrains", version.ref = "extensionsComposeJetbrains" }
# Koin
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose" }
# Ktor
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
# Kamel
kamel-image = { module = "media.kamel:kamel-image", version.ref = "kamel-image" }
# Napier
napier = { module = "io.github.aakira:napier", version.ref = "napier" }

[bundles]
ktor = [
    "ktor-core",
    "ktor-client-logging",
    "ktor-client-negotiation",
    "ktor-client-json",
]
multiplatform-settings = [
    "multiplatform-settings",
    "multiplatform-settings-serialization",
    "multiplatform-settings-coroutines"
]
decompose = [
    "decompose",
    "decompose-jetbrains"
]
[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "jetbrains-compose" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }